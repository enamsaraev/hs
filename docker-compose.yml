version: '3.8'

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_data:/app/static
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    depends_on:
      - pgdb

  pgdb:
    image: postgres
    volumes:
      - postgres_volume:/var/lib/postgres/data/
    environment:
      - POSTGRES_DATABASE=ecommerce_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: redis:alpine
    ports:
      - 3306:3306
    entrypoint: redis-server --appendonly yes

  celery:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A ecommerce_celery worker -l info
    env_file:
      - backend/.env
    depends_on:
      - pgdb
      - redis
      - django
  front:
    restart: always
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "80:80"
    volumes:
      - static_data:/app/static
    depends_on:
      - pgdb
      - redis
      - django
      - celery

volumes:
  postgres_volume:
  static_data:
